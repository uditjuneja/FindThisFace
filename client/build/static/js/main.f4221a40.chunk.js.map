{"version":3,"sources":["images/backgroundImage.png","FileUpload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","registerPlugin","FilePondPluginFileValidateType","FileUpload","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","files","onChange","id","_this2","react_default","a","createElement","style","textAlign","flex","minWidth","padding","react_filepond","ref","pond","allowMultiple","acceptedFileTypes","onupdatefiles","fileItems","setState","map","fileItem","file","handleChange","i","key","src","origin","Component","App","onOpenModal","open","onCloseModal","initialState","elements","disabled","buttonText","count","email","width","handleFieldChange","bind","assertThisInitialized","renderFileUpload","handleSubmit","fileUpload","handleEmailChange","handleWidthChange","fieldId","value","defineProperty","forEach","item","length","event","target","k","src_FileUpload","preventDefault","then","response","console","log","data","_this3","formData","FormData","inneritem","newName","name","newFile","File","append","post","headers","content-type","button2","_this4","objectSpread","styles","button","background","concat","bg","backgroundSize","paddingBottom","paddingTop","glowingText","form","label","type","input","required","onSubmit","method","index_es","onClose","onExited","center","fontFamily","fontSize","marginTop","display","flexDirection","justifyContent","flexWrap","border","borderBottom","margin","fontStyle","color","borderRadius","marginLeft","cursor","textShadow","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4221a40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundImage.da8a433f.png\";","import React, { Component } from 'react';\nimport { FilePond, File, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\n\nregisterPlugin( FilePondPluginFileValidateType);\n\nclass FileUpload extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      files:[]\n    }\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.id,this.state.files);\n  }\n\n  render() {\n    return (\n        <div style={{textAlign:'center',flex: '1',minWidth:'45vw',padding:15}}>\n            <h1>{this.props.id}</h1>\n            <FilePond ref={ref => this.pond = ref}\n                allowMultiple={true}\n                acceptedFileTypes={['image/*']}\n                onupdatefiles={(fileItems) => {\n                // Set current file objects to this.state\n                    this.setState({\n                        files: fileItems.map(fileItem => fileItem.file)\n                    });\n                    this.handleChange()                \n                }}\n                >\n                \n                {/* Update current files  */}\n                {this.state.files.map((file,i) => (\n                    <File key={i} src={file} origin=\"local\" />\n                ))}\n                \n            </FilePond>\n        </div>\n        \n    );\n  }\n}\n\nexport default FileUpload;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FileUpload from './FileUpload'\nimport  { post } from 'axios';\nimport bg from './images/backgroundImage.png'\nimport Linkedin from './Linkedin'\nimport Modal from \"react-responsive-modal\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.initialState={\n      elements:[],\n      disabled:true,\n      buttonText:'Add class',\n      count:0,\n      email:'',\n      width:50,\n      open:false\n    }\n    this.state = this.initialState;\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.renderFileUpload = this.renderFileUpload.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleWidthChange = this.handleWidthChange.bind(this);\n    this.onOpenModal=this.onOpenModal.bind(this);\n    this.onCloseModal=this.onCloseModal.bind(this);\n  }\n  onOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n  handleFieldChange(fieldId, value) {\n    // var {elements} = this.state;  \n    this.setState({[fieldId]:value});  \n    var count = 0\n    this.state.elements.forEach((item)=>{\n      if(this.state[item])\n        count+=this.state[item].length\n    })\n    this.setState({count})\n  }\n\n  handleEmailChange(event){\n    this.setState({email:event.target.value})\n  }\n  handleWidthChange(event){\n    this.setState({width:event.target.value})\n  }\n\n\n  renderFileUpload(k){\n    return (\n       <FileUpload\n            id={k}\n            onChange={this.handleFieldChange}\n        />      \n    )\n  }\n  handleSubmit(event) {\n    //console.log(this.state);\n    event.preventDefault();\n    this.onOpenModal();\n    this.fileUpload().then((response)=>{\n      console.log('Response is: \\n'+ response.data);\n    })\n  }\n\n  fileUpload(){\n    const url = '/submit';\n    const formData = new FormData();\n    this.state.elements.forEach((item)=>{\n      if(this.state[item]){\n        this.state[item].forEach((inneritem)=>{\n          var newName = item+\"$\"+inneritem.name\n          var newFile =new File([inneritem],newName)\n          formData.append('files',newFile);\n        })\n      }\n    })\n\n    formData.append('email',this.state.email);\n    formData.append('width',this.state.width);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return  post(url, formData,config)\n  }\n\n  render() {\n    var button1,button2\n    if(this.state.disabled)\n      button1 = {...styles.button}\n    else\n      button1 = styles.button\n\n    if(this.state.count>10 || this.state.count===0)\n      button2 = {...styles.button}\n    else\n      button2 = styles.button\n    return (\n      <div style={{textAlign:'center',background:`url(${bg})`,backgroundSize:'cover',paddingBottom:100,paddingTop:50}}>\n        <div style={styles.glowingText}>\n            Find this Face\n        </div>\n               \n        \n        <div style={styles.form}>\n        {this.renderFileUpload('Upload Image')}\n\n          <label style={styles.label}>\n            All ]ill be resizedsuj tok some dimensions. Enter dimensions in Pixel(px)\n          </label>\n          <br/>\n          <br/>\n          <label style={styles.label}>permissible error: </label>\n          <input type=\"number\" value={this.state.width} onChange={this.handleWidthChange} style={{...styles.input,...{width:120}}} required={true}/>\n          <br/>\n          <form onSubmit={this.handleSubmit} method='post'>\n            <label style={styles.label}>your_name: </label>\n            <input type=\"text\" value={this.state.email} onChange={this.handleEmailChange} style={styles.input} required={true}/>\n            <button  type=\"submit\" style={button2}>\n              {this.state.count>10 ? \"Max 10 files\":\"Submit\"}\n            </button>\n        </form>\n        </div>\n   \n        <Modal \n              open={this.state.open} \n              onClose={this.onCloseModal} \n              onExited = {()=> this.setState(this.initialState)}\n              center>\n              <div\n                style={{\n                  fontFamily:'roboto',\n                  fontSize:20,\n                  marginTop:50\n                }}\n              >Thank you for using our web service. Results will be mailed to {this.state.email}</div>\n              <div style={{\n                    display:'flex',flexDirection:'row',justifyContent:'space-evenly',\n                    paddingTop:50,flexWrap:'wrap'\n                }}>\n                </div>\n            </Modal> \n      </div>\n    );\n  }\n}\n\nconst styles = {\n  input:{\n    border:'none',\n    borderBottom:'1px dashed #83A4C5',\n    margin:'10px 3px',    \n    fontStyle:'italic',\n    width:250,\n    background:'transparent',\n    fontFamily:'roboto',\n    fontSize:20,\n    color:'#1e1e1e'\n  },\n  label:{\n    fontSize:20,\n    fontFamily:'roboto'\n  },\n  button:{\n    padding:'7px 30px',\n    fontFamily:'roboto',\n    borderRadius:'10px',\n    marginLeft:'5px',\n    fontSize:15,\n    margin:'10px 3px',\n    cursor:'pointer',\n  },\n  form:{\n    background:'rgb(255,255,255,0.7)',\n    paddingTop:30,\n    paddingBottom:30,\n    margin:'0 10px',\n    borderRadius:10\n  },\n  glowingText:{\n    color:'rgb(99, 54, 38)',\n    background: '#333333',\n    textShadow:'0 -1px 4px #FFF, 0 -2px 10px #ff0, 0 -10px 20px #ff8000, 0 -18px 40px #F00',\n    fontFamily:'roboto',\n    fontSize:50,\n    margin:30,\n    padding:30,\n    borderRadius:10\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}