!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["react","prop-types"],n):e.Dropzone=n(e.React,e.PropTypes)}(this,function(e,n){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,n=n&&n.hasOwnProperty("default")?n.default:n;var t,r,o=(function(e){e.exports=function(e){function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=13)}([function(e,n){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n){var t=e.exports={version:"2.5.0"};"number"==typeof __e&&(__e=t)},function(e,n,t){e.exports=!t(4)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e,n,t){var r=t(32)("wks"),o=t(9),i=t(0).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,n,t){var r=t(0),o=t(2),i=t(8),a=t(22),u=t(10),c=function(e,n,t){var s,f,p,l,d=e&c.F,g=e&c.G,v=e&c.S,y=e&c.P,h=e&c.B,m=g?r:v?r[n]||(r[n]={}):(r[n]||{}).prototype,D=g?o:o[n]||(o[n]={}),b=D.prototype||(D.prototype={});for(s in g&&(t=n),t)p=((f=!d&&m&&void 0!==m[s])?m:t)[s],l=h&&f?u(p,r):y&&"function"==typeof p?u(Function.call,p):p,m&&a(m,s,p,e&c.U),D[s]!=p&&i(D,s,l),y&&b[s]!=p&&(b[s]=p)};r.core=o,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,n,t){var r=t(16),o=t(21);e.exports=t(3)?function(e,n,t){return r.f(e,n,o(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n){var t=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+r).toString(36))}},function(e,n,t){var r=t(24);e.exports=function(e,n,t){if(r(e),void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 2:return function(t,r){return e.call(n,t,r)};case 3:return function(t,r,o){return e.call(n,t,r,o)}}return function(){return e.apply(n,arguments)}}},function(e,n){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n,t){var r=t(28),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,n,t){n.__esModule=!0,n.default=function(e,n){if(e&&n){var t=Array.isArray(n)?n:n.split(","),r=e.name||"",o=e.type||"",i=o.replace(/\/.*$/,"");return t.some(function(e){var n=e.trim();return"."===n.charAt(0)?r.toLowerCase().endsWith(n.toLowerCase()):n.endsWith("/*")?i===n.replace(/\/.*$/,""):o===n})}return!0},t(14),t(34)},function(e,n,t){t(15),e.exports=t(2).Array.some},function(e,n,t){var r=t(7),o=t(25)(3);r(r.P+r.F*!t(33)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,n,t){var r=t(17),o=t(18),i=t(20),a=Object.defineProperty;n.f=t(3)?Object.defineProperty:function(e,n,t){if(r(e),n=i(n,!0),r(t),o)try{return a(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var r=t(1);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,n,t){e.exports=!t(3)&&!t(4)(function(){return 7!=Object.defineProperty(t(19)("div"),"a",{get:function(){return 7}}).a})},function(e,n,t){var r=t(1),o=t(0).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,n,t){var r=t(1);e.exports=function(e,n){if(!r(e))return e;var t,o;if(n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;if("function"==typeof(t=e.valueOf)&&!r(o=t.call(e)))return o;if(!n&&"function"==typeof(t=e.toString)&&!r(o=t.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){var r=t(0),o=t(8),i=t(23),a=t(9)("src"),u=Function.toString,c=(""+u).split("toString");t(2).inspectSource=function(e){return u.call(e)},(e.exports=function(e,n,t,u){var s="function"==typeof t;s&&(i(t,"name")||o(t,"name",n)),e[n]!==t&&(s&&(i(t,a)||o(t,a,e[n]?""+e[n]:c.join(String(n)))),e===r?e[n]=t:u?e[n]?e[n]=t:o(e,n,t):(delete e[n],o(e,n,t)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||u.call(this)})},function(e,n){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n,t){var r=t(10),o=t(26),i=t(27),a=t(12),u=t(29);e.exports=function(e,n){var t=1==e,c=2==e,s=3==e,f=4==e,p=6==e,l=5==e||p,d=n||u;return function(n,u,g){for(var v,y,h=i(n),m=o(h),D=r(u,g,3),b=a(m.length),x=0,O=t?d(n,b):c?d(n,0):void 0;b>x;x++)if((l||x in m)&&(y=D(v=m[x],x,h),e))if(t)O[x]=y;else if(y)switch(e){case 3:return!0;case 5:return v;case 6:return x;case 2:O.push(v)}else if(f)return!1;return p?-1:s||f?f:O}}},function(e,n,t){var r=t(5);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,n,t){var r=t(11);e.exports=function(e){return Object(r(e))}},function(e,n){var t=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:t)(e)}},function(e,n,t){var r=t(30);e.exports=function(e,n){return new(r(e))(n)}},function(e,n,t){var r=t(1),o=t(31),i=t(6)("species");e.exports=function(e){var n;return o(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!o(n.prototype)||(n=void 0),r(n)&&null===(n=n[i])&&(n=void 0)),void 0===n?Array:n}},function(e,n,t){var r=t(5);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,n,t){var r=t(0),o=r["__core-js_shared__"]||(r["__core-js_shared__"]={});e.exports=function(e){return o[e]||(o[e]={})}},function(e,n,t){var r=t(4);e.exports=function(e,n){return!!e&&r(function(){n?e.call(null,function(){},1):e.call(null)})}},function(e,n,t){t(35),e.exports=t(2).String.endsWith},function(e,n,t){var r=t(7),o=t(12),i=t(36),a="".endsWith;r(r.P+r.F*t(38)("endsWith"),"String",{endsWith:function(e){var n=i(this,e,"endsWith"),t=arguments.length>1?arguments[1]:void 0,r=o(n.length),u=void 0===t?r:Math.min(o(t),r),c=String(e);return a?a.call(n,c,u):n.slice(u-c.length,u)===c}})},function(e,n,t){var r=t(37),o=t(11);e.exports=function(e,n,t){if(r(n))throw TypeError("String#"+t+" doesn't accept regex!");return String(o(e))}},function(e,n,t){var r=t(1),o=t(5),i=t(6)("match");e.exports=function(e){var n;return r(e)&&(void 0!==(n=e[i])?!!n:"RegExp"==o(e))}},function(e,n,t){var r=t(6)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[r]=!1,!"/./"[e](n)}catch(e){}}return!0}}])}(t={exports:{}},t.exports),t.exports),i=(r=o)&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r,a=function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")},u=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),c=function(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e},s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},f=function(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t},p=function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n},l=function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)},d="undefined"==typeof document||!document||!document.createElement||"multiple"in document.createElement("input");function g(e,n){return"application/x-moz-file"===e.type||i(e,n)}function v(e){return"function"==typeof e.isPropagationStopped?e.isPropagationStopped():void 0!==e.cancelBubble&&e.cancelBubble}function y(e){return void 0!==e.defaultPrevented?e.defaultPrevented:"function"==typeof e.isDefaultPrevented&&e.isDefaultPrevented()}function h(e){return!e.dataTransfer||Array.prototype.some.call(e.dataTransfer.types,function(e){return"Files"===e||"application/x-moz-file"===e})}function m(e){e.preventDefault()}function D(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),o=1;o<t;o++)r[o-1]=arguments[o];return n.some(function(n){return n&&n.apply(void 0,[e].concat(r)),e.defaultPrevented})}}var b=function(n){function t(){var e,n,r;a(this,t);for(var o=arguments.length,i=Array(o),u=0;u<o;u++)i[u]=arguments[u];return n=r=p(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),r.state={draggedFiles:[],acceptedFiles:[],rejectedFiles:[]},r.isFileDialogActive=!1,r.onDocumentDrop=function(e){r.node&&r.node.contains(e.target)||(e.preventDefault(),r.dragTargets=[])},r.onDragStart=function(e){e.persist(),r.props.onDragStart&&h(e)&&r.props.onDragStart.call(r,e)},r.onDragEnter=function(e){e.preventDefault(),-1===r.dragTargets.indexOf(e.target)&&r.dragTargets.push(e.target),e.persist(),h(e)&&(Promise.resolve(r.props.getDataTransferItems(e)).then(function(n){v(e)||r.setState({draggedFiles:n,isDragActive:!0})}),r.props.onDragEnter&&r.props.onDragEnter.call(r,e))},r.onDragOver=function(e){return e.preventDefault(),e.persist(),e.dataTransfer&&(e.dataTransfer.dropEffect="copy"),r.props.onDragOver&&h(e)&&r.props.onDragOver.call(r,e),!1},r.onDragLeave=function(e){e.preventDefault(),e.persist(),r.dragTargets=r.dragTargets.filter(function(n){return n!==e.target&&r.node.contains(n)}),r.dragTargets.length>0||(r.setState({isDragActive:!1,draggedFiles:[]}),r.props.onDragLeave&&h(e)&&r.props.onDragLeave.call(r,e))},r.onDrop=function(e){var n=r.props,t=n.onDrop,o=n.onDropAccepted,i=n.onDropRejected,a=n.multiple,u=n.accept,c=n.getDataTransferItems;e.preventDefault(),e.persist(),r.dragTargets=[],r.isFileDialogActive=!1,r.draggedFiles=null,r.setState({isDragActive:!1,draggedFiles:[]}),h(e)&&Promise.resolve(c(e)).then(function(n){var c=[],s=[];v(e)||(n.forEach(function(e){g(e,u)&&function(e,n,t){return e.size<=n&&e.size>=t}(e,r.props.maxSize,r.props.minSize)?c.push(e):s.push(e)}),!a&&c.length>1&&s.push.apply(s,l(c.splice(0))),r.setState({acceptedFiles:c,rejectedFiles:s},function(){t&&t.call(r,c,s,e),s.length>0&&i&&i.call(r,s,e),c.length>0&&o&&o.call(r,c,e)}))})},r.onClick=function(e){var n=r.props,t=n.onClick,o=n.disableClick;t&&t.call(r,e),o||y(e)||(e.stopPropagation(),!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.navigator.userAgent;return function(e){return-1!==e.indexOf("MSIE")||-1!==e.indexOf("Trident/")}(e)||function(e){return-1!==e.indexOf("Edge/")}(e)}()?r.open():setTimeout(r.open,0))},r.onInputElementClick=function(e){e.stopPropagation()},r.onFileDialogCancel=function(){var e=r.props.onFileDialogCancel;r.isFileDialogActive&&setTimeout(function(){null!=r.input&&(r.input.files.length||(r.isFileDialogActive=!1,"function"==typeof e&&e()))},300)},r.onFocus=function(e){var n=r.props.onFocus;n&&n.call(r,e),y(e)||r.setState({isFocused:!0})},r.onBlur=function(e){var n=r.props.onBlur;n&&n.call(r,e),y(e)||r.setState({isFocused:!1})},r.onKeyDown=function(e){var n=r.props.onKeyDown;r.node.isEqualNode(e.target)&&(n&&n.call(r,e),y(e)||32!==e.keyCode&&13!==e.keyCode||(e.preventDefault(),r.open()))},r.composeHandler=function(e){return r.props.disabled?null:e},r.getRootProps=function(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=n.refKey,o=void 0===t?"ref":t,i=n.onKeyDown,a=n.onFocus,u=n.onBlur,p=n.onClick,l=n.onDragStart,d=n.onDragEnter,g=n.onDragOver,v=n.onDragLeave,y=n.onDrop,h=f(n,["refKey","onKeyDown","onFocus","onBlur","onClick","onDragStart","onDragEnter","onDragOver","onDragLeave","onDrop"]);return s((e={onKeyDown:r.composeHandler(i?D(i,r.onKeyDown):r.onKeyDown),onFocus:r.composeHandler(a?D(a,r.onFocus):r.onFocus),onBlur:r.composeHandler(u?D(u,r.onBlur):r.onBlur),onClick:r.composeHandler(p?D(p,r.onClick):r.onClick),onDragStart:r.composeHandler(l?D(l,r.onDragStart):r.onDragStart),onDragEnter:r.composeHandler(d?D(d,r.onDragEnter):r.onDragEnter),onDragOver:r.composeHandler(g?D(g,r.onDragOver):r.onDragOver),onDragLeave:r.composeHandler(v?D(v,r.onDragLeave):r.onDragLeave),onDrop:r.composeHandler(y?D(y,r.onDrop):r.onDrop)},c(e,o,r.setNodeRef),c(e,"tabIndex",r.props.disabled?-1:0),e),h)},r.getInputProps=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.refKey,t=void 0===n?"ref":n,o=e.onChange,i=e.onClick,a=f(e,["refKey","onChange","onClick"]),u=r.props,p=u.accept,l=u.multiple,g=u.name,v=c({accept:p,type:"file",style:{display:"none"},multiple:d&&l,onChange:D(o,r.onDrop),onClick:D(i,r.onInputElementClick),autoComplete:"off",tabIndex:-1},t,r.setInputRef);return g&&g.length&&(v.name=g),s({},v,a)},r.setNodeRef=function(e){r.node=e},r.setInputRef=function(e){r.input=e},r.open=function(){r.isFileDialogActive=!0,r.input&&(r.input.value=null,r.input.click())},p(r,n)}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(t,e.Component),u(t,[{key:"componentDidMount",value:function(){var e=this.props.preventDropOnDocument;this.dragTargets=[],e&&(document.addEventListener("dragover",m,!1),document.addEventListener("drop",this.onDocumentDrop,!1)),window.addEventListener("focus",this.onFileDialogCancel,!1)}},{key:"componentWillUnmount",value:function(){this.props.preventDropOnDocument&&(document.removeEventListener("dragover",m),document.removeEventListener("drop",this.onDocumentDrop)),window.removeEventListener("focus",this.onFileDialogCancel,!1)}},{key:"render",value:function(){var e,n,t=this.props,r=t.children,o=t.multiple,i=t.disabled,a=this.state,u=a.isDragActive,c=a.isFocused,s=a.draggedFiles,f=a.acceptedFiles,p=a.rejectedFiles,l=s.length,d=o||l<=1,v=l>0&&(e=s,n=this.props.accept,e.every(function(e){return g(e,n)}));return r({isDragActive:u,isDragAccept:v,isDragReject:l>0&&(!v||!d),draggedFiles:s,acceptedFiles:f,rejectedFiles:p,isFocused:c&&!i,getRootProps:this.getRootProps,getInputProps:this.getInputProps,open:this.open})}}]),t}();return b.propTypes={accept:n.oneOfType([n.string,n.arrayOf(n.string)]),children:n.func,disableClick:n.bool,disabled:n.bool,preventDropOnDocument:n.bool,multiple:n.bool,name:n.string,maxSize:n.number,minSize:n.number,getDataTransferItems:n.func,onClick:n.func,onFocus:n.func,onBlur:n.func,onKeyDown:n.func,onDrop:n.func,onDropAccepted:n.func,onDropRejected:n.func,onDragStart:n.func,onDragEnter:n.func,onDragOver:n.func,onDragLeave:n.func,onFileDialogCancel:n.func},b.defaultProps={preventDropOnDocument:!0,disabled:!1,disableClick:!1,multiple:!0,maxSize:1/0,minSize:0,getDataTransferItems:function(e){var n=[];if(e.dataTransfer){var t=e.dataTransfer;t.files&&t.files.length?n=t.files:t.items&&t.items.length&&(n=t.items)}else e.target&&e.target.files&&(n=e.target.files);return Array.prototype.slice.call(n)}},b});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
